

imagebase64 = "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"

imagebase64 

import PIL
import io
import base64
base64.b64decode(imagebase64)

io.BytesIO(base64.b64decode(imagebase64))

import PIL.Image as pilimage

img = pilimage.open(io.BytesIO(base64.b64decode(imagebase64)))

img.save("test.png")
